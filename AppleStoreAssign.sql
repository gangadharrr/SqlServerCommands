CREATE OR ALTER PROCEDURE iPHONE13PROSALE @QUANTITY INT
AS
DECLARE @PRICE INT
SET @PRICE=(SELECT PRICE FROM [PRODUCTS TABLE] WHERE PRODUCT_CODE='P1') * @QUANTITY;
INSERT INTO [SALES TABLE] VALUES(cast(getdate() as date),'P1',@QUANTITY,@PRICE);
UPDATE [PRODUCTS TABLE] SET QUANTITY_REMAINING=QUANTITY_REMAINING-@QUANTITY WHERE PRODUCT_CODE='P1';
UPDATE [PRODUCTS TABLE] SET QUANTITY_SOLD=QUANTITY_SOLD+@QUANTITY WHERE PRODUCT_CODE='P1';
SELECT 'PRODUCTS TABLE';
SELECT * FROM [PRODUCTS TABLE];
SELECT 'SALES TABLE';
SELECT * FROM [SALES TABLE];
GO
CREATE OR ALTER PROCEDURE iPHONE13PROSALE @QUANTITY INT
AS
DECLARE @PRICE INT
SET @PRICE=(SELECT PRICE FROM [PRODUCTS TABLE] WHERE PRODUCT_CODE='P1') * @QUANTITY;
INSERT INTO [SALES TABLE] VALUES(cast(getdate() as date),'P1',@QUANTITY,@PRICE);
UPDATE [PRODUCTS TABLE] SET QUANTITY_REMAINING=QUANTITY_REMAINING-@QUANTITY WHERE PRODUCT_CODE='P1';
UPDATE [PRODUCTS TABLE] SET QUANTITY_SOLD=QUANTITY_SOLD+@QUANTITY WHERE PRODUCT_CODE='P1';
SELECT 'PRODUCTS TABLE';
SELECT * FROM [PRODUCTS TABLE];
SELECT 'SALES TABLE';
SELECT * FROM [SALES TABLE];
GO

IF EXISTS (SELECT * FROM sysobjects WHERE name='SALES TABLE' and xtype='U')
DROP TABLE [SALES TABLE];
IF EXISTS (SELECT * FROM sysobjects WHERE name='PRODUCTS TABLE' and xtype='U')
DROP TABLE [PRODUCTS TABLE];

CREATE TABLE [PRODUCTS TABLE] 
(
	PRODUCT_CODE VARCHAR(20),
	PRODUCT_NAME VARCHAR(100),
	PRICE REAL,
	QUANTITY_REMAINING INT,
	QUANTITY_SOLD INT
	PRIMARY KEY(PRODUCT_CODE),
);
CREATE TABLE [SALES TABLE] 
(
	ORDER_ID INT IDENTITY(1,1) PRIMARY KEY,
	ORDER_DATE DATE,
	PRODUCT_CODE VARCHAR(20),
	QUANTITY_ORDERED INT,
	SALE_PRICE INT,
	FOREIGN KEY (PRODUCT_CODE) REFERENCES [PRODUCTS TABLE](PRODUCT_CODE)
);
INSERT INTO [PRODUCTS TABLE] VALUES
('P1','iPhone 13 Pro Max',1200,5,195),
('P2','AirPods Pro',279,10,90),
('P3','MacBook Pro 16',5000,2,48),
('P4','iPad Air',650,1,9);

EXEC iPHONE13PROSALE 2;

